#MYSQL, kafkaMQ ??

# MYSQL DB ??
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/basilium?serverTimezone=UTC&characterEncoding=UTF-8
spring.datasource.username=basilium
spring.datasource.password=pjhcsol

server.port = 8080
#????? ??? ??? ??? ??
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

#Spring DevTools, LiveReload ?? ???? ??? ??
spring.devtools.restart.enabled=false
#spring.devtools.livereload.enabled=false
#spring.mvc.async.request-timeout=60000
# ????? 60?? ?? (??? ?? ?? ??)
server.tomcat.connection-timeout=60000
# ??? ?? ????
spring.mvc.async.request-timeout=60000
#JVM ??? ??
JAVA_OPTS="-Xms512m -Xmx1024m"



#DEBUG
#logging.level.org.springframework=DEBUG
#logging.level.org.hibernate=DEBUG

#??
spring.jpa.open-in-view=false
#??? ?? ?? pool size = Tn x (Cm - 1) + 1 #warn: Thread starvation or clock leap detected
#????? ?? 12x3+1 tps ???? ??? ? ????
spring.datasource.hikari.maximum-pool-size=24
# ?? ?? ?? ?? (??: ms)
#spring.datasource.hikari.connection-timeout=30000

# ?? ?? ???? ?? (??: ms)
#spring.datasource.hikari.idle-timeout=600000

# ?? ?? ?? ?? (??: ms)
#spring.datasource.hikari.max-lifetime=1800000


#thymeleaf
spring.thymeleaf.check-template-location=false

# JPA ??
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create


# userImage upload dir
# uploadDir = /Users/gimseungjun/Desktop/BE/VirtualFitting_System/basilium-server/src/main/java/basilium/basiliumserver/userImageStorage/
#uploadDir = /Users/hansol/Desktop/VirtualFitting_System/basilium-server/src/main/java/basilium/basiliumserver/userImageStorage/
#profileDir = /Users/hansol/Desktop/VirtualFitting_System/basilium-server/src/main/java/basilium/basiliumserver/userProfileImageStorage/
image.upload-dir= basilium-server/src/main/resources/userImageStorage/
image.profile-dir= basilium-server/src/main/resources/userProfileImageStorage/
#/Users/hansol/Desktop/VirtualFitting_System/basilium-server/src/main/resources/userImageStorage
#/Users/hansol/Desktop/VirtualFitting_System/basilium-server/src/main/resources/userProfileImageStorage
#spring.jpa.show-sql=true
jwt.secret=VlwEyVBsYt9V7zq57TejMnVUyzblYcfPQye08f7MGVA9XkHa
jwt.expiredMs=86400000

# Multipart ??
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=1GB
spring.servlet.multipart.max-request-size=2GB

#s3 git
cloud.aws.credentials.accessKey=bean
cloud.aws.credentials.secretKey=bean
cloud.aws.stack.auto=false

# AWS S3 Service bucket
cloud.aws.s3.bucket=
cloud.aws.region.static=ap-northeast-2

# AWS S3 Bucket URL
cloud.aws.s3.bucket.url=

#import git
imp.code=
imp.api.key=
imp.api.secretkey=

#kafkaMQ
#kafka.bootstrapAddress=localhost:9092
#message.topic.name=mytopic
#greeting.topic.name=greeting
#filtered.topic.name=filtered
#partitioned.topic.name=partitioned

#RabbitMQ
#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest

# Oauth-google
social.client.google.rest-api-key=temp
social.client.google.secret-key=temp
social.client.google.redirect-uri=temp
social.client.google.grant_type=authorization_code
# Oauth-kakao
social.client.kakao.rest-api-key=temp
social.client.kakao.redirect-uri=temp
social.client.kakao.grant_type=authorization_code
# Oauth-naver
social.client.naver.rest-api-key=temp
social.client.naver.secret-key=temp
social.client.naver.redirect-uri=temp
social.client.naver.grant_type=authorization_code